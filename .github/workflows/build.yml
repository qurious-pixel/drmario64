name: build
on:
  push: null
  workflow_dispatch:
jobs:
  build-unix:
    runs-on: ubuntu-22.04
    env:
      CCACHE_DIR: /home/runner/work/drmario64/drmario64/.ccache
    strategy:
      matrix:
        type:
          - Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: n64modern2
          submodules: recursive
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-ccache-${{ matrix.type }}
      - name: Install Linux Dependencies
        run: >
          sudo apt-get update && sudo apt install -y ninja-build libgtk-3-dev lld
          llvm clang-15 libfreetype-dev libfuse2 libsdl2-dev gcc-mips-linux-gnu
          binutils-mips-linux-gnu python3-pip python3-venv libpng-dev
      - name: Install SDL2 Dependencies
        run: |
          # Enable ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          SDLVER=2.26.1
          if [[ ! -e ${{ env.CCACHE_DIR }} ]]; then
              mkdir ${{ env.CCACHE_DIR }}
          fi
          cd ${{ env.CCACHE_DIR }}
          ls ${{ env.CCACHE_DIR }}
          if [[ ! -e SDL2-${SDLVER} ]]; then
          	curl -sSLO https://libsdl.org/release/SDL2-${SDLVER}.tar.gz
          	tar -xzf SDL2-${SDLVER}.tar.gz
          	cd SDL2-${SDLVER}
           	./configure
          	make -j8 && cd ../
            rm SDL2-${SDLVER}.tar.gz
          fi
          sudo make -C SDL2-${SDLVER} install
          sudo cp -av /usr/local/lib/libSDL* /lib/x86_64-linux-gnu/
      - name: Clone DrMario_decomp
        run: |
          git clone https://github.com/AngheloAlf/drmario64 drmario64_decomp
          cd drmario64_decomp
          # Enable ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          ls ${{ env.CCACHE_DIR }}
          if [[ ! -e ${{ env.CCACHE_DIR }}/baserom.us.z64 ]]; then
              curl -sSfL ${{ secrets.BASEROM }} -o ${{ env.CCACHE_DIR }}/baserom.us.z64
              md5sum ${{ env.CCACHE_DIR }}/baserom.us.z64
          fi
          cp ${{ env.CCACHE_DIR }}/baserom.us.z64 .
          python3 -m pip install --no-cache-dir -r requirements.txt
          cargo install pigment64 --version ">=0.3.0,<1.*"
          make setup && make lib && make extract && make
          cp build/us/drmario64_uncompressed.us.z64 ..
          cp build/us/drmario64.us.elf ..
      - name: Build N64Recomp & RSPRecomp
        run: |
          git clone https://github.com/Mr-Wiseguy/N64Recomp.git --recurse-submodules N64RecompSource
          cd N64RecompSource

          # enable ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

          # Build N64Recomp & RSPRecomp
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_C_COMPILER=gcc-11 -DCMAKE_MAKE_PROGRAM=ninja -G Ninja -S . -B cmake-build
          cmake --build cmake-build --config Release --target N64Recomp -j8
          cmake --build cmake-build --config Release --target RSPRecomp -j8

          # Copy N64Recomp & RSPRecomp to root directory
          cp cmake-build/N64Recomp ..
          cp cmake-build/RSPRecomp ..
      - name: Run N64Recomp & RSPRecomp
        run: |
          ./N64Recomp drmario64.us.toml
          ./RSPRecomp aspMain.us.toml
      - name: Build DrMario64
        run: |-
          # enable ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
                      
          # manual fix
          sed -i '84i\\tpause_self(rdram);' RecompiledFuncs/Idle_ThreadEntry.c

          cmake -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER=clang++-15 -DCMAKE_C_COMPILER=clang-15 -DCMAKE_MAKE_PROGRAM=ninja -G Ninja -S . -B cmake-build
          cmake --build cmake-build --parallel
      - name: Prepare Archive
        run: |
          mv cmake-build/drmario64_recomp DrMario64
          rm -rf assets/scss
          tar -czf DrMario64-${{ runner.os }}-${{ matrix.type }}.tar.gz DrMario64 assets/
      - name: Archive DrMario64
        uses: actions/upload-artifact@v4
        with:
          name: DrMario64-${{ runner.os }}-${{ matrix.type }}
          path: DrMario64-${{ runner.os }}-${{ matrix.type }}.tar.gz

      - name: Build DrMario64
        run: |-
          chmod +x .github/linux/appimage.sh
          ./.github/linux/appimage.sh
          
      - name: DrMario64 AppImage
        uses: actions/upload-artifact@v4
        with:
          name: DrMario64-AppImage
          path: DrMario64-x86_64.AppImage
